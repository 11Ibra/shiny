% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{customStop}
\alias{customStop}
\title{Create a custom error}
\usage{
customStop(error, errorClass = character(0))
}
\arguments{
\item{error}{Either an "error" object or a "character" object (string).
The former will just be rethrown, while the latter will be used as the
message of the error returned by \code{customStop}.}

\item{errorClass}{An optional class to add to the error.}
}
\description{
This should be used when you want to create a custom error to which error
default settings do not apply.
}
\details{
An error generated by \code{customStop} has priority over all
other Shiny errors. This can be dangerous. For example, if you have set
\code{options((shiny.sanitize.errors = TRUE)}, then by default all error
messages are omitted in the app, and replaced by a generic error message.
However, this does not apply to \code{customStop}: whatever you pass
through \code{error} will be displayed to the user. So, this should only
be used when you are sure that your error message does not contain any
sensitive information. In those situations, \code{customStop} can make
your users' lives much easier by giving them a hint as to where the
error occurred.
}
\examples{
# in ui.R
fluidPage(
  textInput('number', 'Enter your favorite number from 1 to 10'),
  textOutput('result')
)

# in server.R
function(input, output) {
  output$result <- renderText({
  number <- input$number
    if (number \%in\% 1:10) {
      return(paste('You chose', number, '!'))
    } else {
      return(customStop(
        paste(number, 'is not a number between 1 and 10')
      ))
    }
  })
}
}

